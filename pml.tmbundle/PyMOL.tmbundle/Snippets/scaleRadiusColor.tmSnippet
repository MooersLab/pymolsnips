<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>content</key>
    <string>
% Scale the radius and color of atoms as spheres by property in the B-value column.
# Use snippets scaleRadiusColorpy and scaleRadiusColorPythonInsertpy for python scripts;
bg_color white;
hide everything;
show spheres;
set  stick_radius = 0.1;
hide everything, HET;
show spheres, HET;
set sphere_quality=3;
show sticks, resi ${1:1102};
from pymol import stored;
# set the stored array equal to the b−values or use your own values; 
stored.bb = [ ];
iterate all, stored.bb.append(b);
# execute a python−block;
python;
# scale the b−values;
M = max(stored.bb);
scaledBB = map(lambda x: float (x/M), stored.bb);
count = 0;
# set the sphere radii independently;
#[(cmd.set("sphere_scale", x ,"ID %s"%count); count = count + 1) for x in scaledBB];
for x in scaledBB:
  cmd.set("sphere_scale", x ,"ID %s"%count)
  count = count + 1
python end;
spectrum b, selection=${2:4gdx};
space cmyk;
set specular_intensity , 0.25;
</string>
    <key>keyEquivalent</key>
    <string>scaleRadiusColor</string>
    <key>name</key>
    <string>Scale the radius and color of atoms as spheres by property in the B-value column.</string>
    <key>scope</key>
    <string>text.pml</string>
    <key>tabTrigger</key>
    <string>scaleRadiusColor</string>
    <key>uuid</key>
    <string>86a66ed5-d2e4-454c-b983-01b1a6002b88</string>
</dict>
</plist>
