{
"ao": {
    "prefix": "ao",
    "body": ["set_color oxygen, [1.0,0.4,0.4];",
"set_color nitrogen, [0.5,0.5,1.0];",
"remove solvent;",
"as spheres;",
"util.cbaw;",
"bg white;",
"set light_count,10;",
"set spec_count,1;",
"set shininess, 10;",
"set specular,0.25;",
"set ambient,0;",
"set direct,0;",
"set reflect,1.5;",
"set ray_shadow_decay_factor, 0.1;",
"set ray_shadow_decay_range, 2;",
"unset depth_cue;",
"ray;",
"${0}"]
,
    "description": "Ambient occlussion.",
    "scope": "text.pml"
},
"ellipcol": {
    "prefix": "ellipcol",
    "body": ["set ellipsoid_color, ${1:color};","${0}"],
    "description": "Set ellipsoid color.",
    "scope": "text.pml"
},
"sigdist": {
    "prefix": "sigdist",
    "body": ["set label_distance_digits, ${1:2}",
"{$0}"],
    "description": "set distance labels to display 2 decimals",
    "scope": "text.pml"
},
"sigang": {
    "prefix": "sigang",
    "body": ["set label_angle_digits, ${1:2};","${0}"],
    "description": "Set angle labels to display 2 decimals places",
    "scope": "text.pml"
},
"bs": {
    "prefix": "bs",
    "body": ["show sticks;",
"set stick_radius, 0.12;",
"set stick_ball, on;",
"set stick_ball_ratio, 1.9;",
"show nb_spheres;",
"set nb_spheres_size=0.33;",
"$0"]
,
    "description": "Ball and stick representation. ",
    "scope": "text.pml"
},
"stack": {
    "prefix": "stack",
    "body": ["delete all;",
"fetch ${1:4PCO}, type=pdb,async=0;",
"select ${2:G2G3}, ( ((resi ${3:2} or resi ${4:3}) and chain A) or ((resi ${5:8} or resi ${6:9}) and chain B) );",
"hide everything, element h; ",
"remove not ${2:G2G3};",
"bg_color white;",
"show sticks;",
"set stick_radius=0.14;",
"set stick_ball, on; ",
"set stick_ball_ratio,1.9;",
"set_view (-0.75,0.09,0.66,-0.2,0.92,-0.35,-0.64,-0.39,-0.67,-0.0,-0.0,-43.7,7. 24,9.55,11.78,29.46,57.91,-20.0);",
"hide everything, element H;",
"select carbon1, element C and (resi ${4:3} or resi ${5:8}) ",
"# select lower base pair;",
"select carbon2, element C and (resi ${3:2} or resi ${6:9}) ",
"#select upper base pair;",
"color gray70,carbon1;",
"color gray10,carbon2;",
"space cmyk;",
"distance hbond1,/${1:4PCO}//B/U`9/N3,/${1:4PCO}//A/G`2/O6;",
"distance hbond2,/${1:4PCO}//B/U`9/O2,/${1:4PCO}//A/G`2/N1;",
"distance hbond3,/${1:4PCO}//A/U`3/N3,/${1:4PCO}//B/G`8/O6;",
"distance hbond4,/${1:4PCO}//A/U`3/O2,/${1:4PCO}//B/G`8/N1;",
"color black, hbond1;",
"color black, hbond2;",
"color gray70, hbond3;",
"color gray70, hbond4;",
"show nb_spheres;",
"set nb_spheres_size, 0.35;",
"hide labels;",
"ray 1600,1000;",
"png ${1:4PCO}.png;",
"$0"]
,
    "description": "Base-stacking figure.",
    "scope": "text.pml"
},
"bu": {
    "prefix": "bu",
    "body": ["run ~/Scripts/PyMOLScripts/quat.py;",
"quat;",
"${0}"],
    "description": "Biological unit.",
    "scope": "text.pml"
},
"doubleBond": {
    "prefix": "doubleBond",
    "body": ["set valence, 1; ",
"set valence_mode, 1;",
"${0}"],
    "description": "Valence bond. ",
    "scope": "text.pml"
},
"cblind": {
    "prefix": "cblind",
    "body": ["run ~/Pymol-script-repo/colorblindfriendly.py;",
"as cartoon;",
"color cb_red, ss H;",
"color cb_yellow,ss S;",
"color cb_green, ss L+; ",
"$0"],
    "description": "Color blindness.",
    "scope": "text.pml"
},
"centerpi": {
    "prefix": "centerpi",
    "body": ["pseudoatom pi_cent,/${1:3nd3}/${2:A}/${3:U`15}/cg+cz;"
"dist pi_cent////ps1, b/${4:U`15}/${5:aaa};"
"$0"]
,
    "description": "Center pi.",
    "scope": "text.pml"
},
"cribbon": {
    "prefix": "cribbon",
    "body": ["as cartoon;",
"color red, ss H;",
"color yellow,ss S;",
"color green, ss L+;",
"$0"],
    "description": "Color ribbon H red, strand yellow, loop green.",
    "scope": "text.pml"
},
"cspheres": {
    "prefix": "cspheres",
    "body": ["as spheres;",    
"color gray30, chain %0;",    
"color white, chain %1;",    
"color green, name CL;",    
"color brown, resn NAG;",    
"color red, resi 381;",    
"remove solvent;",    
"unset specular;",   
"set ray_trace_gain, 0;",    
"set ray_trace_mode, 3;",    
"bg_color white;",    
"set ray_trace_color, black;",    
"unset depth_cue;",    
"$0"]
,
    "description": "Colored spheres.",
    "scope": "text.pml"
},
"coordinate": {
    "prefix": "coordinate",
    "body": ["viewport 900,600;",
"fetch 3nd4, type=pdb, async=0;",
"run ~/Scripts/PyMOLScripts/quat.py;",
"quat 3nd4;",
"show sticks;",
"set stick_radius=0.125;",
"hide everything, name H*;",
"bg_color white;",
"create coorCov, (3nd4_1 and (resi 19 or resi 119 or resi 219 or resi 319 or resi 419 or resi 519 or (resi 3 and name N7)));",
"bond (coorCov//A/NA`19/NA),(coorCov//A/A`3/N7);",
"bond (coorCov//A/NA`19/NA),(coorCov//A/HOH`119/O);",
"bond (coorCov//A/NA`19/NA),(coorCov//A/HOH`219/O);",
"bond (coorCov//A/NA`19/NA),(coorCov//A/HOH`319/O);",
"bond (coorCov//A/NA`19/NA),(coorCov//A/HOH`519/O);    ",
"distance (3nd4_1 and chain Aand resi 19 and name NA), (3nd4_1 and chain A and resi 519);",
"distance (3nd4_1 and chain A and resi 19 and name NA), (3nd4_1 and chain A and resi 419);",
"distance (3nd4_1 and chain A and resi 19 and name NA), (3nd4_1 and chain A and resi 319);",
"distance (3nd4_1 and chain A and resi 19 and name NA), (3nd4_1 and chain A and resi 219);",
"show nb_spheres;",
"set nb_spheres_size, .35;",
"distance hbond1,/3nd4_1/1/A/HOH`119/O, /3nd4_1/1/A/A`3/OP2;",
"distance hbond2,/3nd4_1/1/A/HOH`319/O, /3nd4_1/1/A/A`3/OP2;",
"distance hbond3,/3nd4_1/1/A/HOH`91/O,/3nd4_1/1/A/HOH`119/O",
"distance hbond4,/3nd4_1/1/A/G`4/N7,/3nd4_1/1/A/HOH`91/O;",
"distance hbond5,/3nd4_1/1/A/G`4/O6, /3nd4_1/1/A/HOH`419/O;",
"distance hbond6,/3nd4_1/1/A/HOH`91/O,/3nd4_1/1/A/G`4/OP2;",
"distance hbond7,/3nd4_1/1/A/HOH`319/O,/3nd4_1/1/A/G`2/OP2;",
"distance  hbond9,/3nd4_1/1/A/HOH`419/O,/3nd4_2/2/A/HOH`74/O;",
"distance hbond10,/3nd4_2/2/A/C`15/O2,/3nd4_1/1/A/G`2/N2;",
"distance hbond11, /3nd4_2/2/A/C`15/N3,/3nd4_1/1/A/G`2/N1;",
"distance hbond12,/3nd4_2/2/A/C`15/N4,/3nd4_1/1/A/G`2/O6;",
"distance hbond13, /3nd4_2/2/A/U`14/N3,/3nd4_1/1/A/A`3/N1;",
"distance hbond14,3nd4_2/2/A/U`14/O4,/3nd4_1/1/A/A`3/N6;",
"distance hbond15, /3nd4_2/2/A/C`13/N4,/3nd4_1/1/A/G`4/O6",
"distance hbond16,/3nd4_2/2/A/C`13/N3, /3nd4_1/1/A/G`4/N1;",
"distance hbond17, /3nd4_1/1/A/G`4/N2,/3nd4_2/2/A/C`13/O2;",
"distance hbond18,/3nd4_1/1/A/G`2/N2,/3nd4_2/2/A/C`15/O2;",
"distance hbond19,/3nd4_1/1/A/HOH`91/O,/3nd4_1/1/A/G`4/OP2;",
"set depth_cue=0;",
"set ray_trace_fog=0;",
"set dash_color, black;",
"set label_font_id, 5;",
"set label_size, 36",
"set label_position, (0.5, 1.0, 2.0)",
"set label_color, black;",
"set dash_gap, 0.2;",
"set dash_width, 2.0;",
"set dash_length, 0.2;",
"set label_color, black;",
"set dash_gap, 0.2",
"set dash_width, 2.0",
"set dash_length, 0.2;",
"select carbon, element C;",
"color yellow, carbon;",
"disable carbon;",
"set_view(-0.9,0.34,-0.26,0.33,0.18,-0.93,-0.27,-0.92,-0.28,-0.07,-0.23,-27.83,8.63,19.85,13.2,16.0,31.63,-20.0)",
"$0"],
    "description": "Coordinate covalent bonds to metals and H-bonds friom RNA.",
    "scope": "text.pml"
},
"distance": {
    "prefix": "distance",
    "body": ["distance ${1:dist3}, ${2:/rcsb074137//B/IOD`605/I`B,} ${3:/rcsb074137//B/IOD`605/I`A}","${0}"],
    "description": "H-bond distances.",
    "scope": "text.pml"
},
"drawHbonds": {
    "prefix": "drawHbonds",
    "body": ["hide everything, hydrogens;",
"hide labels;",
"set dash_color, ${1:black};", 
"set dash_gap, 0.4;",
"set dash_radius, 0.08;",
"$0"]
,
    "description": "Draw H-bonds. ",
    "scope": "text.pml"
},
"carvedDensity": {
    "prefix": "carvedDensity",
    "body": ["delete all;",
"fetch 4dgr, async=0;",
"fetch 4dgr, type=2fofc,async=0;",
"select LongGlycan, resi 469:477;",
"orient LongGlycan;",
"remove not LongGlycan;",
"remove name H*;",
"isomesh 2fofcmap, 4dgr_2fofc, 1, LongGlycan, carve = 1.8;",
"color density, 2fofcmap;", 
"show sticks;",
"show spheres;",
"set stick_radius, .07;",
"set sphere_scale, .19;",
"set sphere_scale, .13, elem H;",
"set bg_rgb=[1, 1, 1];",
"set stick_quality, 50;",
"set sphere_quality, 4;",
"color gray85, elem C;",
"color red, elem O;",
"color slate, elem N;",
"color gray98, elem H;",
"set stick_color, gray50;",
"set ray_trace_mode, 1;",
"set ray_texture, 2;",
"set antialias, 3;",
"set ambient, 0.5;",
"set spec_count, 5;",
"set shininess, 50;",
"set specular, 1;",
"set reflect, .1;",
"set dash_gap, 0;",
"set dash_color, black;",
"set dash_gap, .15;",
"set dash_length, .05;",
"set dash_round_ends, 0;",
"set dash_radius, .05;",
"set_view (0.34,-0.72,0.61,0.8,0.56,0.22,-0.51,0.4,0.77,0.0,0.0,-81.31,44.64,-9.02,58.62,65.34,97.28,-20.0);",
"preset.ball_and_stick("all",mode=1);",
"draw;",
"${0}"]
,
    "description": "Carved electron density. ",
    "scope": "text.pml"
},
"fetch2FoFc": {
    "prefix": "fetch2FoFc",
    "body": ["fetch ${1:3nd4}, type=2fofc, async=0;",
"$0"],
    "description": "Fetch 2FoFc map.",
    "scope": "text.pml"
},
"fetchCIF": {
    "prefix": "fetchCIF",
    "body": ["fetch ${1:3nd4}, type=cif, async=0;",
"$0"]
,
    "description": "Fetch cif file.",
    "scope": "text.pml"
},
"fetchFoFc": {
    "prefix": "fetchFoFc",
    "body": ["fetch ${1:3nd4}, type=fofc, async=0;",
"$0"],
    "description": "Fetch fofc map.",
    "scope": "text.pml"
},
"filledRing": {
    "prefix": "filledRing",
    "body": ["show sticks;set cartoon_ring_mode, 3;",
"set cartoon_ring_finder, 1;",
"set cartoon_ladder_mode, 1;",
"set cartoon_nucleic_acid_mode, 4;",
"set cartoon_ring_transparency, 0.5;",
"as cartoon;",
"$0"],
    "description": "Filled rings in nucleic acids. ",
    "scope": "text.pml"
},
"getCoordinates": {
    "prefix": "getCoordinates",
    "body": ["print cmd.get_atom_coords('${1:/4PCO//B/G`8/OP2}');",
"$0"]
,
    "description": "Get coordinates. ",
    "scope": "text.pml"
},
"hbonddash": {
    "prefix": "hbonddash",
    "body": ["hide everything, hydrogens;",
"hide labels;",
"set dash_color, black;", 
"set dash_gap, 0.4;",
"set dash_radius, 0.08;",
"$0"],
    "description": "H-bond dashes.",
    "scope": "text.pml"
},
"hbond": {
    "prefix": "hbond",
    "body": ["hide everything, hydrogens;",
"hide labels;",
"set dash_color, black;", 
"set dash_gap, 0.4;",
"set dash_radius, 0.08;",
"$0"],
    "description": "Hbond setup. ",
    "scope": "text.pml"
},
"hidealtloc": {
    "prefix": "hidealtloc",
    "body": ["select altconf, alt ${1:b}  # select B alternative locators;",
"hide everything, altconf  # hide alt B locators;",
"$0"],
    "description": "Hide alt loc.",
    "scope": "text.pml"
},
"labelResnResi": {
    "prefix": "labelResnResi",
    "body": ["label name ca, '%s%s' %(one_letter[${1:resn}],${2:resi});",
"$0"],
    "description": "Label CA atom with single-letter residue name and residue number.",
    "scope": "text.pml"
},
"labelSS": {
    "prefix": "labelSS",
    "body": ["alter ${1:}, ss='%1';",
"label (%2),'%3';",
"$0"],
    "description": "Label SS. ",
    "scope": "text.pml"
},
"loadPDBbs": {
    "prefix": "loadPDBbs",
    "body": ["fetch ${1:3nd3},name=${1:3nd3}, type=pdb, async=0;",
"hide (name H*);",
"hide lines;",
"show sticks;",
"set stick_radius, ${2:1.2};",
"set nb_sphere_radius, ${3:0.35};",
"orient;",
"$0"],
    "description": "Load PDB ball-and-stick.",
    "scope": "text.pml"
},
"loadPDBnb": {
    "prefix": "loadPDBnb",
    "body": ["fetch ${1:3nd3},name=${1:3nd3}, type=pdb, async=0;",
"orient;",
"set stick_radius, ${2:1.2};",
"hide (name H*);",
"set nb_sphere_size, ${3:0.35};",
"set nb_spheres_quality, ${4:1};",
"show nb_spheres;",
"$0"],
    "description": "Load PDB nb spheres. ",
    "scope": "text.pml"
},
"ms": {
    "prefix": "ms",
    "body": ["fetch ${1:3nd3},name=${1:3nd3}, type=pdb, async=0;",
"select ${2:temp}, ${3:3nd3} and chain A;",
"run ${3:/Users/blaine-mooers/Scripts/PyMOLScripts/msms_pymol.py};",
"calc_msms_area ${2:temp};",
"$0"],
    "description": "Measure surface area. ",
    "scope": "text.pml"
},
"molscriptRibbon": {
    "prefix": "molscriptRibbon",
    "body": ["set cartoon_highlight_color, grey;",
"show cartoon;",
"set cartoon_flat_sheets, 0;",
"set cartoon_smooth_loops, 0;",
"set cartoon_fancy_helices, 1;",
"$0"],
    "description": "Molscript ribbons.",
    "scope": "text.pml"
},
"oneLetter": {
    "prefix": "oneLetter",
    "body": ["one_leVer%={'VAL':'V',%'ILE':'I',%'LEU':'L',%'GLU':'E',%'GLN':'Q','ASP':'D',%'ASN':'N',%'HIS':'H',%'TRP':'W',%'PHE':'F',%'TYR':'Y',%'ARG':'R',%'LYS':'K',%'SER':'S',%'THR':'T',%'MET':'M',%'ALA':'A',%'GLY':'G',%'PRO':'P',%'CYS':'C'}%;",
"$0"],
    "description": "One letter amino acid. ",
    "scope": "text.pml"
},
"fasta": {
    "prefix": "fasta",
    "body": ["print cmd.get_fastastr('all');",
"${0}"],
    "description": "Print Fasta from PDB file. ",
    "scope": "text.pml"
},
"pseudolabel": {
    "prefix": "pseudolabel",
    "body": ["pseudoatom ${1:forLabel};",
"label ${1:forLabel}, '%0';",
"set label_color, ${2:red};",
"$0"],
    "description": "Position label with pseudoatom. ",
    "scope": "text.pml"
},
"rotate": {
    "prefix": "rotate",
    "body": ["rotate ${1:x}, ${2:45}, ${3:pept};",
"$0"],
    "description": "Rotate about axis.",
    "scope": "text.pml"
},
"stereoDraw": {
    "prefix": "stereoDraw",
    "body": ["stereo walleye;",
"set ray_shadow, off;", 
"#draw 3200,2000;",
"draw ${1:1600,1000};", 
"png ${2:aaa}.png;",
"$0"],
    "description": "Stereo draw.",
    "scope": "text.pml"
},
"stereoRay": {
    "prefix": "stereoRay",
    "body": ["stereo;",
"set ray_shadow, off;",
"ray ${1:2400,1200};",
"png ${2:aaa}.png;",
"$0"],
    "description": "Stereo ray.",
    "scope": "text.pml"
},
"threeMaps": {
    "prefix": "threeMaps",
    "body": ["load ${1:4dgr}.pdb;",
"# Make sure to rename map file so that;",
"# the root filename differs from pdb root filename;",
"load ${1:4dgr}_2fofc.ccp4, 2fofc;",
"load ${1:4dgr}_fofc.ccp4, fofc;",
"select  ${2:glycan}, resid 200 or (resid 469:477);",
"isomesh ${3:mesh1}, 2fofc, 1.0, ${2:glycan};",
"color density, ${3:mesh1};",
"isomesh ${4:mesh2}, fofc, 3.0, ${2:glycan};",
"color green, ${4:mesh2};",
"isomesh ${5:mesh2}, fofc, -­3.0, ${2:glycan};",
"color red, ${5:mesh2};",
"${0}"],
    "description": "Three electron density. ",
    "scope": "text.pml"
},
"turnAboutAxis": {
    "prefix": "turnAboutAxis",
    "body": ["turn ${1:x},${2:90};",
"$0"],
    "description": "Turn about axis. ",
    "scope": "text.pml"
},
"volumeRamp": {
    "prefix": "volumeRamp",
    "body": ["cmd.volume_ramp_new('ramp_magenta', [0.01, 1.00, 0.00, 1.00, 0.00, 4.01, 1.00, 0.00, 1.00, 0.10, 4.99, 1.00, 0.00, 1.00, 0.50,]);",
"$0"],
    "description": "Volume ramp.",
    "scope": "text.pml"
},
"solventRadius": {
    "prefix": "solventRadius",
    "body": ["set solvent_radius, ${1:1.55};",
"${0}"],
    "description": "Set radius of ball used to make solvent accessible surface.",
    "scope": "text.pml"
},
"scaleRadiusColor": {
    "prefix": "scaleRadiusColor",
    "body": ["bg_color white;",
"hide everything;",
"show spheres;",
"set  stick_radius = 0.1;",
"hide everything, HET;",
"show spheres, HET;",
"set sphere_quality=3;",
"show sticks, resi 1102;",
"from pymol import stored;",
"# set the stored array equal to the b−values; or use your own values ;",
"stored.bb = [ ];",
"iterate, stored.bb.append(b);",
"# execute a python−block;",
"python;",
"# scale the b−values;",
"M = max(stored.bb);",
"scaledBB = map(lambda x: float (x/M), stored.bb);",
"count = 0;",
"# set the sphere radii independently;",
"for x in scaledBB:",
"  cmd.set('sphere_scale', x ,'ID %s'%count);",
"  count = count + 1;",
"python end;",
"spectrum b, selection=4gdx;",
"space cmyk;",
"set specular_intensity , 0.25;",
"${0}"]
,
    "description": "Scale the radius and color of atoms as spheres by property in the B-value column.",
    "scope": "text.pml"
},
"rv": {
    "prefix": "rv",
    "body": ["run roundview.py;",
"${0}"],
    "description": "Return settings in rounded format.",
    "scope": "text.pml"
},
"spng": {
    "prefix": "spng",
    "body": ["python;",
"import datetime;",
"from pymol import cmd ;",
"DT =datetime.datetime.now().strftime('yr%Ymo%mday%dhr%Hmin%M');",
"s = str(DT) ;",
"cmd.save(stemName+s+'.png');",
"end python;",
"$0"]
,
    "description": "Save png flle with timestamp",
    "scope": "text.pml"
},
"spse": {
    "prefix": "spse",
    "body": ["python;",
"import datetime;",
"from pymol import cmd;", 
"DT =datetime.datetime.now().strftime('yr%Ymo%mday%dhr%Hmin%M');",
"s = str(DT); ",
"cmd.save(stemName+s+'.png');", 
"end python;", 
"$0"],
    "description": "Save pse flle with timestamp",
    "scope": "text.pml"
},
"sc222": {
    "prefix": "sc222",
    "body": ["run $HOME/Scripts/PyMOLscripts/supercell.py;",
"supercell 2, 2, 2, , orange, supercell2,1;",
"$0"]
,
    "description": "Run Tom Holder's supercell script to generate three cells in all directions.",
    "scope": "text.pml"
},
"pearl": {
    "prefix": "pearl",
    "body": ["create ${1:sodium2}, ${1:sodium1};",
"set sphere_transparency, 0.4, ${1:sodium2};",
"set sphere_scale, 1.05, ${1:sodium2};",
"ray;"
"$0"]
,
    "description": "The pearl effect is made with two spheres with the outer sphere being transparent.",
    "scope": "text.pml"
},
"fog": {
    "prefix": "fog",
    "body": ["set fog, 0";"$0"],
    "description": "Blur the background atoms.",
    "scope": "text.pml"
},
"rmwater": {
    "prefix": "rmwater",
    "body": ["remove resn HOH;", 
"$0"],
    "description": "Remove waters from molecular object.",
    "scope": "text.pml"
},
"setcolor": {
    "prefix": "setcolor",
    "body": ["set_color ${1:bark}, [${2:0.1, ${3:0.1}, ${4:0.1}];",
"color ${1:bark}, ${5:protein};",
"${0}"]
,
    "description": "Set color name to a RGB code.",
    "scope": "text.pml"
},
"duplicateObject": {
    "prefix": "duplicateObject",
    "body": ["create ${1:t4l},${2:1lw9};",
"$0"],
    "description": "Duplicate object.",
    "scope": "text.pml"
},
"selectChain": {
    "prefix": "selectChain",
    "body": ["select ${1:rna}, chain ${2:B};",
${0}],
    "description": "Select a chain. ",
    "scope": "text.pml"
},
"selectResidues": {
    "prefix": "selectResidues",
    "body": ["select aromatic, resnphe+tyr+trp;", 
"${0}"],
    "description": "Select residues by name.",
    "scope": "text.pml"
},
"selectResi": {
    "prefix": "selectResi",
    "body": ["select se;2. resi 1-100;",
"$0"],
    "description": "Select residues by a range of numbers.",
    "scope": "text.pml"
},
"selectElement": {
    "prefix": "selectElement",
    "body": ["select ${1:oxygen}, elem ${2:O};",
"${0}"],
    "description": "Select atoms by elemnt.",
    "scope": "text.pml"
},
"selectName": {
    "prefix": "selectName",
    "body": ["select ${1:oxygen2}, name ${2:O2};","${0}"],
    "description": "Select atoms by name.",
    "scope": "text.pml"
},
"selectHelices": {
    "prefix": "selectHelices",
    "body": ["select ${1:helices}, ss h;","${0}"],
    "description": "Select atoms by alpha helices.",
    "scope": "text.pml"
},
"selectStrands": {
    "prefix": "selectStrands",
    "body": ["select ${1:strands}, ss s;","${0}"],
    "description": "Select atoms by beta strands.",
    "scope": "text.pml"
},
"selectLoops": {
    "prefix": "selectLoops",
    "body": ["select ${1:loops},  ss l;","${0}"],
    "description": "Select atoms by beta loops.",
    "scope": "text.pml"
},
"selectAllBut": {
    "prefix": "selectAllBut",
    "body": ["select ${1:select1}, elem ${2:N} and chain ${3:A} and not resn ${4:LYS};","${0}"],
    "description": "Select all nitrogen atom in a selelction except from lysine.",
    "scope": "text.pml"
},
"selectAtomsAround": {
    "prefix": "selectAtomsAround",
    "body": ["select ${1:nearby}, resn ${2:drug} around ${3:5};",
"${0}"],
    "description": "Select atoms within a radius around a ligand.",
    "scope": "text.pml"
},
"selectResiduesAround": {
    "prefix": "selectResiduesAround",
    "body": ["select ${1:nearby}, br. resn ${2:drug} around ${3:5};",
"${0}"],
    "description": "Select residues within a radius around a ligand.",
    "scope": "text.pml"
},
"undoSelection": {
    "prefix": "undoSelection",
    "body": ["disable ${1:sele};","${0}"],
    "description": "Undo a selection.",
    "scope": "text.pml"
},
"loadPDBfile": {
    "prefix": "loadPDBfile",
    "body": ["load ${1:my.pdb};","${0}"],
    "description": "Load a pdb file in the current directory.",
    "scope": "text.pml"
},
"savePNG": {
    "prefix": "savePNG",
    "body": ["png ${1:saveMe.png};",
"${0}"],
    "description": "Save a png file of current scene to the current directory.",
    "scope": "text.pml"
},
"ringMode": {
    "prefix": "ringMode",
    "body": ["show cartoon, ${1:rna};", 
"set cartoon_ring_mode, ${2:3};",
"${0}"],
    "description": "Set the ring mode to a value between 0  and 6 in cartoons of nucleic acids.",
    "scope": "text.pml"
},
"sidehChainHelper": {
    "prefix": "sidehChainHelper",
    "body": ["set cartoon_side_chain_helper, on;","${0}"],
    "description": "In cartoons, hide the backbone atoms of selected residues when showing then as sticks.",
    "scope": "text.pml"
},
"extractPartObj": {
    "prefix": "extractPartObj",
    "body": ["extract ${1:new_obj}, chain ${2:A};",
"${0}"],
    "description": "Create a new object from part of an existing object.",
    "scope": "text.pml"
},
"puttyCartoon": {
    "prefix": "puttyCartoon",
    "body": ["show cartoon;",
"cartoon putty;",
"unset cartoon_smooth_loops;",
"unset cartoon_flat_sheets;",
"${0}"]
,
    "description": "Create a putty cartoon.",
    "scope": "text.pml"
},
"hideSelection": {
    "prefix": "hideSelection",
    "body": ["indicate none;",
"${0}"],
    "description": "Trun off magenta squares on current selection.",
    "scope": "text.pml"
},
"discreteCartoonColoring": {
    "prefix": "discreteCartoonColoring",
    "body": ["set cartoon_discrete_colors, on","$0"],
    "description": "Turn on discrete colors between secondary structure elements.",
    "scope": "text.pml"
},
"sc111": {
    "prefix": "sc111",
    "body": ["run $HOME/Scripts/PyMOLscripts/supercell.py;",
"supercell 1, 1, 1, , orange, supercell1, 1;", 
"${0}"]
,
    "description": "Display all symmetry mates in one unit cell. Uses supercell.py in $HOME/Scripts/PyMOLscripts/.",
    "scope": "text.pml"
},
"saxsEnvelope": {
    "prefix": "saxsEnvelope",
    "body": ["alter ${1:refine_A_Ave_SM_015_0_370-374-0r, vdw=3.0};", 
"set solvent_radius = 3.0;",
"${0}"],
    "description": "Display SAXS envelope",
    "scope": "text.pml"
},
"setpath": {
    "prefix": "setpath",
    "body": ["os.environ["PATH"] += os.pathsep +${1: '/Applications/ATSAS/bin'};",
"$0"]
,
    "description": "Set additional path for PyMOL to search on startup",
    "scope": "text.pml"
},
"fetchPath": {
    "prefix": "fetchPath",
    "body": ["set fetch_path, ${1:/Users/blaine/pdbFiles};",
"$0"],
    "description": "Set path for location to save fetched pdb files. ",
    "scope": "text.pml"
},
"antialias": {
    "prefix": "antialias",
    "body": ["set antialias, 1;",
"$0"],
    "description": "Set antialias to get smooth edges",
    "scope": "text.pml"
},
"lspymolrc": {
    "prefix": "lspymolrc",
    "body": ["print invocation.options.deferred;"
"$0"],
    "description": "Print list of active pymolrc files.",
    "scope": "text.pml"
},
"sigDigits": {
    "prefix": "sigDigits",
    "body": ["set label_distance_digits, ${1:2};",
"set label_angle_digits, ${2:2};",
"$0"]
,
    "description": "Set number of decimals places to show in distance labels. ",
    "scope": "text.pml"
},
"labelCAs": {
    "prefix": "labelCAs",
    "body": ["label name CA,"%s%s" % (resn,resi);",
"%0"]
,
    "description": "Label the CA atoms with the Ala333 style format",
    "scope": "text.pml"
},
"labelWatersHOH": {
    "prefix": "labelWatersHOH",
    "body": ["label resn HOH ,"%s%s" % (resn,resi);",
"$0"],
    "description": "Label waters HOH.",
    "scope": "text.pml"
},
"labelWatersW": {
    "prefix": "labelWatersW",
    "body": ["label resn HOH ,"W%s" % (resi);",
"$0"]
,
    "description": "Label waters W.",
    "scope": "text.pml"
},
"findHbonds": {
    "prefix": "findHbonds",
    "body": ["remove element h; distance hbonds, all, all, 3.2, mode=2;",
"$0"],
    "description": "Find hbonds around a residue.",
    "scope": "text.pml"
},
"printBs": {
    "prefix": "printBs",
    "body": ["remove element h; iterate resi %{1:133}, print resi, name,b;",
"$0"],
    "description": "Print the B-factors of a residue. ",
    "scope": "text.pml"
},
"labelMainChain": {
    "prefix": "labelMainChain",
    "body": ["label name n+c+o+ca,"%s%s%s" % (resn,resi,name);",
"$0"]
,
    "description": "Label the main chain atoms by resn,resi,atom name.",
    "scope": "text.pml"
},
"printBspartB": {
    "prefix": "printBspartB",
    "body": ["iterate resi %{1:38} and altloc %{2:B}, print resi, name, alt, b;",
"$0"],
    "description": "Print B factors of part B of a residue.",
    "scope": "text.pml"
},
"printBs2digits": {
    "prefix": "printBs2digits",
    "body": ["iterate (resi %{1:133}), print(name + " %.2f" % b);",
"$0"],
    "description": "Print B-values for a residue with the B's rounded off to two decimal places.",
    "scope": "text.pml"
},
"writeCommandReference2HTML": {
    "prefix": "writeCommandReference2HTML",
    "body": ["cmd.write_html_ref('pymol-command-ref.html');",
"$0"]
,
    "description": "Write the command reference to html file in the present working directory. ",
    "scope": "text.pml"
},
"averageB": {
    "prefix": "averageB",
    "body": [""""Uses a regular list as opposed to PyMOL's stored list. Edit the selection as needed."""",
"Bfactors = []; ",
"iterate (resi %{1:133}), Bfactors.append(b);",
"print("Sum = ", "%.2f" % (sum(Bfactors)));",
"print("Number of atoms = ", len(Bfactors));",
"print( 'Average B =' , "%.2f" % ( sum(Bfactors)/float(len(Bfactors))));",
"%0"]
,
    "description": "Average the B-factors by using  a regular list as opposed to PyMOL's stored list. Edit the selection as needed.",
    "scope": "text.pml"
},
"aveB4resiX": {
    "prefix": "aveB4resiX",
    "body": [" """AveBResiX, prints the resiude number and the average bfactor. ",
"Uses reduce and lambda, builtin Python functional porgramming functions. ",
"Note that you need to convert the length of the list of Bfactors from an integer to a float before division into the sum. ",
""" ";,
"Bfactors = [];", 
"iterate (resi %{1:133}), Bfactors.append(b);",
"print( "Average B-factor of residue ", %{1:133} , "   = ", "%.2f" %(reduce(lambda x, y: x + y, Bfactors) / float(len(Bfactors))) );",
%0"],
    "description": "AveBResiX, prints the resiude number and the average bfactor. ",
    "scope": "text.pml"
},
"printNameB4ResiX": {
    "prefix": "printNameB4ResiX",
    "body": ["Bfac_dict = { 'Bfactors3' : [] };",
"cmd.iterate("(resi 133)","Bfactors3.append((name, b))", space=Bfac_dict); for i,j in Bfac_dict['Bfactors3']: print("%s %.2f" % (i,j));",
"$0"]
,
    "description": "Print name and b-factor for a residue.",
    "scope": "text.pml"
},
"printResiResnNameB4ResiX": {
    "prefix": "printResiResnNameB4ResiX",
    "body": ["Bfac_dict = { 'Bfactors3' : [] };",
"cmd.iterate("(resi 133)","Bfactors3.append((resn,resi,name, b))", "space=Bfac_dict);", "for i,j,k,l in Bfac_dict['Bfactors3']: print("%s %s %s %.2f" % (i,j,k,l));",
"$0"]
,
    "description": "Print resn, resi, atom name, and b-factor. ",
    "scope": "text.pml"
},
"printResiResnNameB4ResiXNoH": {
    "prefix": "printResiResnNameB4ResiXNoH",
    "body": ["Bfac_dict = { 'Bfactors3' : [] };",
"cmd.iterate("(resi 133 and not elem H)","Bfactors3.append((resn,resi,name, b))", space=Bfac_dict);",
"for i,j,k,l in Bfac_dict['Bfactors3']: print("%s %s %s %.2f" % (i,j,k,l));",
"$0"],
    "description": "Print name and b-factor for a residue or residue range (e.g. 81:120). The noH variant.",
    "scope": "text.pml"
},
"internalGUImode2 ": {
    "prefix": "internalGUImode2 ",
    "body": ["internal_gui_mode=2;",\n"$0"],
    "description": "Make the background of the internal gui transparent to expand viewport.",
    "scope": "text.pml"
},
"internalGUIwidth": {
    "prefix": "internalGUIwidth",
    "body": ["internal_gui_width=${1:20};",\n"$0"],
    "description": "Set the width of the internal gui. 
",
    "scope": "text.pml"
},
"printDoc": {
    "prefix": "printDoc",
    "body": ["print ${1:my_func}.__doc__;",\n"$0"],
    "description": "Print document string of a function.",
    "scope": "text.pml"
},
"lsSnips": {
    "prefix": "lsSnips",
    "body": ["   Tab trigger                  Description",
"---------------------------  --------------------------------------------------------------------------------------------------------------------------------------------------------------------",
"antialias                    Set antialias to get smooth edges",
"ao                           Ambient occlussion.",
"aveB4resiX                   Prints the resiude number and the average bfactor.",
"averageB                     Uses a regular list as opposed to PyMOL's stored list. Edit the selection as needed.",
"bs                           Ball and stick representation.",
"bu                           Biological unit.",
"carvedDensity                Carved electron density.",
"cblind                       Color blindness.",
"centerpi                     Center pi.",
"coordinate                   Coordinate covalent bonds to metals and H-bonds friom RNA.",
"cribbon                      Color ribbon H red, strand yellow, loop green.",
"cspheres                     Colored spheres.",
"discreteCartoonColoring      Turn on discrete colors between secondary structure elements.",
"distance                     H-bond distances.",
"doubleBond                   Valence bond.",
"drawHbonds                   Draw H-bonds.",
"duplicateObject              Duplicate object.",
"ellipcol                     Set ellipsoid color.",
"extractPartObj               Create a new object from part of an existing object.",
"fasta                        Print Fasta from PDB file.",
"fetch2FoFc                   Fetch 2FoFc map.",
"fetchCIF                     Fetch cif file.",
"fetchFoFc                    Fetch fofc map.",
"fetchPath                    Set path for location to save fetched pdb files.",
"filledRing                   Filled rings in nucleic acids.",
"findHbonds                   Find hbonds around a residue.",
"fog                          Blur the background atoms.",
"getCoordinates               Get coordinates.",
"hbond                        Hbond setup.",
"hbonddash                    H-bond dashes.",
"hideSelection                Trun off magenta squares on current selection.",
"hidealtloc                   Hide alt loc.",
"internalGUImode2             Make the background of the internal gui transparent to expand viewport.",
"internalGUIwidth             Set the width of the internal gui.",
"labelCAs                     Label the CA atoms with the Ala333 style format",
"labelMainChain               Label the main chain atoms by resn,resi,atom name.",
"labelResnResi                Label CA atom with residue name and residue number.",
"labelSS                      Label SS.",
"labelWatersHOH               Label waters HOH.",
"labelWatersW                 Label waters W.",
"loadPDBbs                    Load PDB ball-and-stick.",
"loadPDBfile                  Load a pdb file in the current directory.",
"loadPDBnb                    Load PDB nb spheres.",
"lsSnips                      List all snips by tab trigger and description",
"lspymolrc                    Print list of active pymolrc files.",
"molscriptRibbon              Molscript ribbons.",
"ms                           Measure surface area.",
"oneLetter                    One letter amino acid.",
"pearl                        The pearl effect is made with two spheres with the outer sphere being transparent.",
"printBs                      Print the B-factors of a residue.",
"printBs2digits               Print B-values for a residue with the B's rounded off to two decimal places.",
"printBspartB                 Print B factors of part B of a rsidues.",
"printDoc                     Print document string of a function.",
"printNameB4ResiX             Print name and b-factor for a residue.",
"printResiResnNameB4ResiX     Print resn, resi, atom name, and b-factor.",
"printResiResnNameB4ResiXNoH  Print name and b-factor for a residue or residue range (e.g. 81:120). The noH variant.",
"pseudolabel                  Position label with pseudoatom.",
"puttyCartoon                 Create a putty cartoon.",
"ringMode                     Set the ring mode to a value between 0  and 6 in cartoons of nucleic acids.",
"rmwater                      Remove waters from molecular object.",
"rotate                       Rotate about axis.",
"rv                           Return settings in rounded format.",
"savePNG                      Save a png file of current scene to the current directory.",
"saxsEnvelope                 Display SAXS envelope",
"sc111                        Display all symmetry mates in one unit cell. Uses supercell.py in $HOME/Scripts/PyMOLscripts/.",
"sc222                        Generate two unit cells in all directions. Uses supercell.py in $HOME/Scripts/PyMOLscripts/.",
"scaleRadiusColor             Scale the radius and color of atoms as spheres by property in the B-value column.",
"selectAllBut                 Select all nitrogen atom in a selelction except from lysine.",
"selectAtomsAround            Select atoms within a radius around a ligand.",
"selectChain                  Select a chain.",
"selectElement                Select atoms by elemnt.",
"selectHelices                Select atoms by alpha helices.",
"selectLoops                  Select atoms by beta loops.",
"selectName                   Select atoms by name.",
"selectResi                   Select residues by a range of numbers.",
"selectResidues               Select residues by name.",
"selectResiduesAround         Select residues within a radius around a ligand.",
"selectStrands                Select atoms by beta strands.",
"setcolor                     Set color name to a RGB code.",
"setpath                      Set additional path for PyMOL to search on startup",
"sidehChainHelper             In cartoons, hide the backbone atoms of selected residues when showing then as sticks.",
"sigDigits                    Set number of decimals places to show in distance labels.",
"sigang                       Set angle labels to display 2 decimals places",
"sigdist                      set distance labels to display 2 decimals",
"solventRadius                Set radius of ball used to make solvent accessible surface.",
"spng                         Save png flle with timestamp",
"spse                         Save pse flle with timestamp",
"stack                        Base-stacking figure.",
"stereoDraw                   Stereo draw.",
"stereoRay                    Stereo ray.",
"threeMaps                    Three electron density.",
"turnAboutAxis                Turn about axis.",
"undoSelection                Undo a selection.",
"volumeRamp                   Volume ramp.",
"writeCommandReference2HTML   Write the command reference to html file in the present working directory.",
"${0]"],
    "description": "List all snips by tab trigger and description",
    "scope": "text.pml"
},
"his31asp70": {
    "prefix": "his31asp70",
    "body": ["fetch 1lw9, async=0;",
"zoom (resi 31 or resi 70);", 
"preset.technical(selection='all');", 
"bg_color gray70;", 
"clip slab, 7,(resi 31 or resi 70);",
"rock;",
"${0}"]
,
    "description": "Asp70-His31 salt-bridge from T4 lysozyme. ",
    "scope": "text.pml"
},
"waterTriple": {
    "prefix": "waterTriple",
    "body": ["fetch 1lw9, async=0;",
"zoom resi 313;", 
"preset.technical(selection='all', mode=1);",
"${0}"]
  
,
    "description": "triple water pentagon.",
    "scope": "text.pml"
},
"ligandSelect": {
    "prefix": "ligandSelect",
    "body": ["select substrates, organic;",
"${0}"]
,
    "description": "Make selection of ligand atoms.",
    "scope": "text.pml"
},
"github": {
    "prefix": "github",
    "body": ["https://github.com/MooersLab/pymolsnips/blob/master/README.md",\n\"${0}\"],
    "description": "Print url of README.md file of the pymolsnips repository.",
    "scope": "text.pml"
},
"sigdihedral": {
    "prefix": "sigdihedral",
    "body": ["set label_dihedral_digits, ${1:2}"; \n${0}"]],
    "description": "Set dihedral labels to display 2 decimals places to the right of the decimal point.",
    "scope": "text.pml"
},
